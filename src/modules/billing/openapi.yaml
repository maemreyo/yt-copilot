openapi: 3.1.0
info:
  title: Billing Module API
  version: 1.0.0
  description: API endpoints for billing and subscription management
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://api.example.com/v1
    description: Production server
  - url: http://localhost:3000/v1
    description: Local development server
paths:
  /v1/billing/create-checkout-session:
    post:
      operationId: createCheckoutSession
      summary: Create Stripe checkout session
      description: Creates a Stripe checkout session for the authenticated user
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                priceId:
                  type: string
                  description: Stripe price ID
                successUrl:
                  type: string
                  format: uri
                  description: URL to redirect to after successful checkout
                cancelUrl:
                  type: string
                  format: uri
                  description: URL to redirect to if checkout is cancelled
                quantity:
                  type: number
                  description: Quantity of the product
                metadata:
                  type: object
                  additionalProperties:
                    type: string
                  description: Metadata to attach to the checkout session
                allowPromotionCodes:
                  type: boolean
                  description: Whether to allow promotion codes
                billingAddressCollection:
                  type: string
                  enum: [auto, required]
                  description: Whether to collect billing address
                customerEmail:
                  type: string
                  format: email
                  description: Customer email address
                locale:
                  type: string
                  description: Locale for the checkout session
              required:
                - priceId
      responses:
        "200":
          description: Checkout session created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  sessionId:
                    type: string
                  url:
                    type: string
                    format: uri
                  expiresAt:
                    type: string
                    format: date-time
                  customerId:
                    type: string
                  message:
                    type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/billing/create-customer-portal:
    post:
      operationId: createCustomerPortalSession
      summary: Create Stripe customer portal session
      description: Creates a Stripe customer portal session for the authenticated user
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                returnUrl:
                  type: string
                  format: uri
                  description: URL to return to after leaving the customer portal
      responses:
        "200":
          description: Customer portal session created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/billing/subscription:
    get:
      operationId: getSubscriptionDetails
      summary: Get subscription details
      description: Gets the subscription details for the authenticated user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Subscription details
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscription:
                    type: [object, "null"]
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        enum:
                          [
                            active,
                            canceled,
                            incomplete,
                            incomplete_expired,
                            past_due,
                            trialing,
                            unpaid,
                          ]
                      currentPeriodEnd:
                        type: string
                        format: date-time
                      cancelAtPeriodEnd:
                        type: boolean
                      priceId:
                        type: string
                      customerId:
                        type: string
                      productName:
                        type: string
                      amount:
                        type: number
                      currency:
                        type: string
                      interval:
                        type: string
                      trialEnd:
                        type: [string, "null"]
                        format: date-time
                      canceledAt:
                        type: [string, "null"]
                        format: date-time
                  cached:
                    type: boolean
                  timestamp:
                    type: string
                    format: date-time
                  requestId:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/webhooks/stripe:
    post:
      operationId: handleStripeWebhook
      summary: Stripe webhook endpoint
      security:
        - {}
      description: Endpoint for Stripe webhook events
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  received:
                    type: boolean
        "400":
          description: Invalid webhook signature
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
